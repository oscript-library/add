#Область ОписаниеПеременных

&НаКлиенте
Перем Ванесса;

#КонецОбласти

#Область ОбработкаСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ТекстОшибки") Тогда
		ТекстОшибки = Параметры.ТекстОшибки;
	КонецЕсли;	 
	
	Если Параметры.Свойство("КаталогИнструментов") Тогда
		КаталогИнструментов = Параметры.КаталогИнструментов;
	КонецЕсли;	 
	
	Если Параметры.Свойство("ДанныеОшибки") Тогда
		Если ТипЗнч(Параметры.ДанныеОшибки) = Тип("Структура")  Тогда
			Если Параметры.ДанныеОшибки.Свойство("ТаблицаЭталон") Тогда
				ТаблицаЭталон          = ЗначениеВСтрокуВнутр(Параметры.ДанныеОшибки.ТаблицаЭталон);
			КонецЕсли;	 
			Если Параметры.ДанныеОшибки.Свойство("ТаблицаТекущееЗначение") Тогда
				ТаблицаТекущееЗначение = ЗначениеВСтрокуВнутр(Параметры.ДанныеОшибки.ТаблицаТекущееЗначение);
			КонецЕсли;	
		КонецЕсли;	 
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Ванесса = ВладелецФормы;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьЗначениеИзСтроки(Значение)
	Возврат ЗначениеИзСтрокиВнутр(Значение); 
КонецФункции	 

&НаКлиенте
Функция ПреобразоватьЗначениеВМакет(Знач ПереданноеЗначение,МассивКлючей = Неопределено)
	Значение = ПолучитьЗначениеИзСтроки(ПереданноеЗначение);
	ПереданМассивКлючей = Ложь;
	Если МассивКлючей <> Неопределено Тогда
		ПереданМассивКлючей = Истина;
	КонецЕсли;	 
	
	Если ТипЗнч(Значение) = Тип("Массив") или ТипЗнч(Значение) = Тип("ФиксированныйМассив") Тогда
		Если Значение.Количество() = 0 Тогда
			Возврат Новый ТабличныйДокумент; 
		КонецЕсли;	 
		
		ЧитаемИзМассиваСтруктур = Ложь;
		ПерваяСтрокаСлужебная = Ложь;
		ПерваяСтрока = Значение[0];
		Если ТипЗнч(ПерваяСтрока) = Тип("Структура") Тогда
			ЧитаемИзМассиваСтруктур = Истина;
			//из первой строки берём массив ключей
			ПерваяСтрокаСлужебная = Истина;
			
			Если Не ПереданМассивКлючей Тогда
				МассивКлючей = Новый Массив;
				Для Каждого Элем Из ПерваяСтрока Цикл
					МассивКлючей.Добавить(Элем.Значение);
				КонецЦикла;	
			КонецЕсли;	 
		КонецЕсли;	 
		
		
		НовоеЗначение = Новый ТабличныйДокумент;
		
		ИдСтроки = 1;
		
		ИдКолонки = 0;
		Для Каждого Ключ Из МассивКлючей Цикл
			ИдКолонки = ИдКолонки + 1;
			НовоеЗначение.Область(ИдСтроки,ИдКолонки,ИдСтроки,ИдКолонки).Текст = Ключ;
		КонецЦикла;	
		ИдСтроки = ИдСтроки + 1;
		
		Если ЧитаемИзМассиваСтруктур Тогда
			Для Ккк = (ИдСтроки-1) По Значение.Количество()-1 Цикл
				СтрокаЗначение = Значение[Ккк];
				
				ИдКолонки = 0;
				Если МассивКлючей <> Неопределено Тогда
					Для Каждого Элем Из МассивКлючей Цикл
						ИдКолонки = ИдКолонки + 1;
						НовоеЗначение.Область(ИдСтроки,ИдКолонки,ИдСтроки,ИдКолонки).Текст = СтрокаЗначение["Кол" + ИдКолонки];
					КонецЦикла;	
				КонецЕсли;	 
				
				ИдСтроки = ИдСтроки + 1;
			КонецЦикла;	
		Иначе	
			Для Ккк = (ИдСтроки-1-1) По Значение.Количество()-1 Цикл
				СтрокаЗначение = Значение[Ккк];
				
				ИдКолонки = 0;
				Если МассивКлючей <> Неопределено Тогда
					Для Каждого Ключ Из МассивКлючей Цикл
						ИдКолонки = ИдКолонки + 1;
						НовоеЗначение.Область(ИдСтроки,ИдКолонки,ИдСтроки,ИдКолонки).Текст = СтрокаЗначение[Ключ];
					КонецЦикла;	
				КонецЕсли;	 
				
				ИдСтроки = ИдСтроки + 1;
			КонецЦикла;	
		КонецЕсли;	 
		
		Возврат НовоеЗначение;
	ИначеЕсли ТипЗнч(Значение) = Тип("ТабличныйДокумент") Тогда	
		Если ТолькоТекстЯчеек Тогда
			НовоеЗначение = Новый ТабличныйДокумент;
			
			Для ИдСтроки = 1 По Значение.ВысотаТаблицы Цикл
				Для ИдКолонки = 1 По Значение.ШиринаТаблицы Цикл
					НовоеЗначение.Область(ИдСтроки,ИдКолонки,ИдСтроки,ИдКолонки).Текст = Значение.Область(ИдСтроки,ИдКолонки,ИдСтроки,ИдКолонки).Текст;
				КонецЦикла;	
			КонецЦикла;	
			
			Возврат НовоеЗначение; 
		Иначе
			Возврат Значение; 
		КонецЕсли;	 
	Иначе
		Возврат Значение;
	КонецЕсли;	 
КонецФункции	 

&НаКлиенте
Процедура ПоказатьСравнениеТабличныхДокументовВСлужебнойБазе(ТаблицаЭталонТабДок,ТаблицаТекущееЗначениеТабДок)
	ФайлТолстогоКлиента = КаталогПрограммы() + "1cv8.exe";
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(ФайлТолстогоКлиента) Тогда
		ТекстСообщения = "Не найден файл толстого клиента <%1>";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",ФайлТолстогоКлиента); 
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
	
	КаталогTools = Ванесса.Объект.КаталогИнструментов + "\Tools\";
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(КаталогTools) Тогда
		Ванесса.СоздатьКаталогКомандаСистемы(КаталогTools);
	КонецЕсли;	 
	
	КаталогСлужебнойБазы = Ванесса.Объект.КаталогИнструментов + "\Tools\CompareFiles\";
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(КаталогСлужебнойБазы) Тогда
		Ванесса.СоздатьКаталогКомандаСистемы(КаталогСлужебнойБазы);
	КонецЕсли;	 
	
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(КаталогСлужебнойБазы) Тогда
		ТекстСообщения = "Не найден файл служебной базы. <%1>";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",КаталогСлужебнойБазы); 
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	 
	
	СписокКаталогов = Новый СписокЗначений;
	СписокФайлов    = Новый СписокЗначений;
	Ванесса.НайтиФайлыКомандаСистемы(КаталогСлужебнойБазы, СписокКаталогов, СписокФайлов, Истина);
	
	Если СписокФайлов.Количество() = 0 Тогда
		//значит надо создать базу
		ИмяКоманды = """" + КаталогПрограммы() + "1cv8"" CreateInfoBase File=""" + КаталогСлужебнойБазы + """";
		СтатусВозврата = Ванесса.ВыполнитьКомандуОСБезПоказаЧерногоОкна(ИмяКоманды);
		Если СтатусВозврата <> 0 Тогда
			ТекстСообщения = "Не смог выполнить команду. <%1>";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1",ИмяКоманды); 
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;	 
	КонецЕсли;	 
	
	ПутьКОбарботке = Ванесса.Объект.КаталогИнструментов + "\Lib\CompareFiles\CompareFiles.epf";
	
	
	ИмяПервогоФайла = ПолучитьИмяВременногоФайла("mxl");
	ТаблицаЭталонТабДок.Записать(ИмяПервогоФайла);
	ИмяВторогоФайла = ПолучитьИмяВременногоФайла("mxl");
	ТаблицаТекущееЗначениеТабДок.Записать(ИмяВторогоФайла);
	
	
	ПараметрЗапускаСравнения = "CompareFiles;" + ИмяПервогоФайла + ";" + ИмяВторогоФайла;
	ИмяКоманды = """" + КаталогПрограммы() + "1cv8"" ENTERPRISE /F""" + КаталогСлужебнойБазы + """ /Execute""" + ПутьКОбарботке + """ /C" + ПараметрЗапускаСравнения;
	ЖдатьОкончания = 0;
	СтатусВозврата = Ванесса.ВыполнитьКомандуОСБезПоказаЧерногоОкна(ИмяКоманды,ЖдатьОкончания);
	Ванесса.Sleep(2);
КонецПроцедуры 

&НаКлиенте
Процедура ПоказатьСравнениеФайлов(СравнениеФайлов,ИмяПервогоФайла,ИмяВторогоФайла);
	СравнениеФайлов.ПервыйФайл = ИмяПервогоФайла;
	СравнениеФайлов.ВторойФайл = ИмяВторогоФайла;
	СравнениеФайлов.СпособСравнения = Вычислить("СпособСравненияФайлов.ТабличныйДокумент");
	СравнениеФайлов.ПоказатьРазличия();
КонецПроцедуры 

&НаКлиенте
Процедура СравнитьТаблицы(Команда)
	
	Если Не ЗначениеЗаполнено(ТаблицаЭталон) Тогда
		Возврат;
	КонецЕсли;	 
	
	Если Не ЗначениеЗаполнено(ТаблицаТекущееЗначение) Тогда
		Возврат;
	КонецЕсли;	 
	
	МассивКлючей                 = Неопределено;
	ТаблицаЭталонТабДок          = ПреобразоватьЗначениеВМакет(ТаблицаЭталон,МассивКлючей);
	ТаблицаТекущееЗначениеТабДок = ПреобразоватьЗначениеВМакет(ТаблицаТекущееЗначение,МассивКлючей);
	
	Попытка
		СравнениеФайлов = Вычислить("Новый СравнениеФайлов");
	Исключение
		ПоказатьСравнениеТабличныхДокументовВСлужебнойБазе(ТаблицаЭталонТабДок,ТаблицаТекущееЗначениеТабДок);
		Возврат;
	КонецПопытки;
	
	ИмяПервогоФайла = ПолучитьИмяВременногоФайла("mxl");
	ТаблицаЭталонТабДок.Записать(ИмяПервогоФайла);
	ИмяВторогоФайла = ПолучитьИмяВременногоФайла("mxl");
	ТаблицаТекущееЗначениеТабДок.Записать(ИмяВторогоФайла);
	
	ПоказатьСравнениеФайлов(СравнениеФайлов,ИмяПервогоФайла,ИмяВторогоФайла);
КонецПроцедуры

#КонецОбласти